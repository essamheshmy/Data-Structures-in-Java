package DataStructuresUse.Lists.KotlinLists

/*
الفرق بين MutableList و ArrayList في كوتلن
MutableList و ArrayList هما مفهومان مرتبطان ببعضهما البعض في لغة البرمجة كوتلن، وكلاهما يستخدمان لتخزين مجموعات من العناصر. ولكن هناك بعض الفروق الدقيقة بينهما:

MutableList
واجهة: MutableList هي واجهة (Interface) تعرّف مجموعة من الطرق التي تسمح بتعديل القائمة، مثل إضافة عناصر، حذف عناصر، وتغيير قيمة عناصر موجودة.
مرونة: لا تحدد MutableList أي تنفيذ محدد للقائمة، مما يعني أنها يمكن أن تكون ArrayList أو LinkedList أو أي نوع آخر يطبق هذه الواجهة.
التركيز على السلوك: تركز MutableList على السلوك الذي يجب أن تقدمه القائمة، أي إمكانية تعديلها، بدلاً من التركيز على كيفية تنفيذ هذا السلوك داخليًا.
ArrayList
تنفيذ: ArrayList هو تنفيذ محدد لواجهة MutableList. وهو يعتمد على مصفوفة داخلية لتخزين العناصر.
الأداء: ArrayList عادة ما يكون سريعًا جدًا للوصول إلى عناصر عشوائية، ولكن قد يكون أبطأ قليلاً في عمليات الإضافة والحذف في بداية أو منتصف القائمة.
التوسع: عندما تصل ArrayList إلى سعتها القصوى، يتم توسيع المصفوفة الداخلية تلقائيًا لتوفير مساحة لعناصر جديدة.
باختصار:
MutableList هي واجهة عامة، بينما ArrayList هو تنفيذ محدد لهذه الواجهة.
كلاهما يسمح بتعديل العناصر.
ArrayList هو الخيار الأكثر شيوعًا للاستخدام العام، ولكنه ليس الخيار الوحيد.
متى تستخدم كل منهما؟
MutableList: عندما تحتاج إلى قائمة قابلة للتعديل ولا تهتم بالتنفيذ الداخلي للقائمة.
ArrayList: عندما تحتاج إلى قائمة قابلة للتعديل وتتوقع الوصول إلى العناصر بشكل عشوائي بشكل متكرر.
مثال:
Kotlin
// إنشاء قائمة قابلة للتعديل باستخدام MutableList
val numbers: MutableList<Int> = mutableListOf(1, 2, 3)

// إنشاء قائمة قابلة للتعديل باستخدام ArrayList
val anotherNumbers: ArrayList<Int> = arrayListOf(4, 5, 6)
يُرجى استخدام الرمز البرمجي بحذر.

في المثال أعلاه:

mutableListOf() هي دالة مساعدة لإنشاء مثيل من MutableList.
arrayListOf() هي دالة مساعدة لإنشاء مثيل من ArrayList.
ملحوظة:

يمكنك استخدام أي من الطريقتين لإنشاء قائمة قابلة للتعديل، ولكن استخدام mutableListOf() يمنحك مرونة أكبر في المستقبل إذا قررت تغيير التنفيذ الداخلي للقائمة.
باختصار:

MutableList هي الواجهة، و ArrayList هو التنفيذ.
اختر MutableList عندما تهتم بالسلوك، واختر ArrayList عندما تهتم بالأداء والتنفيذ.
*/